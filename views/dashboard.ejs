<h1 class="mt-3 mb-3">Hei, <span id="username"><%= username %></span>!</h1>
<div style="max-height: 500px; overflow-y: scroll;" id="output">
</div>
<form id="chat-form">
    <div class="form-group mt-3">
        <input type="text" placeholder="Skriv beskjed..." id="text" style="border-radius:5px;padding:5px; width:94%;">
        <input type="submit" class="btn btn-primary" value="Send">
    </div>
    <br>
</form>
<input type="file" id="uploadfile" name="file" accept="image/x-png,image/gif,image/jpeg">
   
<div id="output_file" style="width:150px; height:100px; min-height:100px; display:block;">
    <img src="" id="image_file" style="display:none; width:100%;">
</div>
<br><br>
<input type="button" id="send_img" style="display:none;" value="Send">
<br><br><br>
<p>Disse er p√•logget:</p>
<ul id="user-list">
</ul>
<a style="float:right;" href="/users/logout" class="btn btn-danger">Logg ut</a>
<br><br>
<hr>
<script src="../socket.io/socket.io.js"></script>
<script>
const chatForm = document.getElementById("chat-form");
let chatMessages = document.getElementById("output");
let userList = document.getElementById("user-list");

const socket = io();

socket.emit("adduser", document.getElementById("username").innerText);

socket.on("base64 file back", (data) =>{
    outputImage(data);
    console.log(data);

    chatMessages.scrollTop = chatMessages.scrollHeight;
})

socket.on("users", users => {
    outputUsers(users);
})
socket.on("update", users => {
    outputUsers(users);
})

socket.on("message", (message) => {
    outputMessage(message);

    chatMessages.scrollTop = chatMessages.scrollHeight;
})
// image submit
$('#uploadfile').bind('change', function(e){
    var data = e.originalEvent.target.files[0];
    readThenSendFile(data);    
});

function readThenSendFile(data){

    var reader = new FileReader();
    reader.onload = function(evt){
        var msg ={};
        msg.username = "<%= username %>";
        msg.file = evt.target.result;
        msg.fileName = data.name;
        socket.emit('base64 file', msg);
    };
    reader.readAsDataURL(data);
}
//message submit
chatForm.addEventListener("submit", (e) => {
    e.preventDefault();

    const msg = document.getElementById("text").value;

    let username = document.getElementById("username").innerText;

    socket.emit("chatMessage", username, msg);

    document.getElementById("text").value = "";
    document.getElementById("text").focus();
})

function outputMessage(message){
    const div = document.createElement("div");
    div.classList.add('message');
    div.innerHTML = `<p style="margin-bottom:0px; background-color:lightblue; class="meta">${message.text} </p>
    <small style="font-size:11px; margin-top:0px;" class="text">${message.username} klokken: ${message.time}</p>`;
    document.getElementById("output").appendChild(div);
}

function outputImage(data){
    const div = document.createElement("div");
    div.classList.add('message');
    div.innerHTML = `<p style="margin-bottom:0px; background-color:lightblue; class="meta"><img src="${data.file}" style="width:200px;"> </p>
    <small style="font-size:11px; margin-top:0px;" class="text">${data.username} har send: ${data.fileName}</p>`;
    document.getElementById("output").appendChild(div);
        
}

function outputUsers(users) {
  userList.innerHTML = `
    ${users.map(user => `<li>${user}</li>`).join('')}
  `;
}

</script>